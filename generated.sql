/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 11-дек.-2022 21:00:46 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */

SET FOREIGN_KEY_CHECKS=0 
;

/* Drop Views */

DROP VIEW IF EXISTS `GET_ARMCHAIRS` CASCADE
;

DROP VIEW IF EXISTS `GET_BATHS` CASCADE
;

DROP VIEW IF EXISTS `GET_BEDS` CASCADE
;

DROP VIEW IF EXISTS `GET_CHAIRS` CASCADE
;

DROP VIEW IF EXISTS `GET_CUPBOARDS` CASCADE
;

DROP VIEW IF EXISTS `GET_DOORS` CASCADE
;

DROP VIEW IF EXISTS `GET_DRESSERS` CASCADE
;

DROP VIEW IF EXISTS `GET_FLOOR_LAMPS` CASCADE
;

DROP VIEW IF EXISTS `GET_MATRESSES` CASCADE
;

DROP VIEW IF EXISTS `GET_MIRRORS` CASCADE
;

DROP VIEW IF EXISTS `GET_ORDERS` CASCADE
;

DROP VIEW IF EXISTS `GET_SHELFS` CASCADE
;

DROP VIEW IF EXISTS `GET_SINKS` CASCADE
;

DROP VIEW IF EXISTS `GET_SOFAS` CASCADE
;

DROP VIEW IF EXISTS `GET_TABLES` CASCADE
;

DROP VIEW IF EXISTS `GET_TOP_5_DELIVERY_USER_BY_NUM_OF_ORDERS` CASCADE
;

DROP VIEW IF EXISTS `GET_TOP_5_ORDERS_BY_PRICE` CASCADE
;

DROP VIEW IF EXISTS `GET_TOP_5_PRODUCT_BY_ORDER` CASCADE
;

DROP VIEW IF EXISTS `GET_USERS_INFO` CASCADE
;

/* Drop Tables */

DROP TABLE IF EXISTS `address` CASCADE
;

DROP TABLE IF EXISTS `armchair` CASCADE
;

DROP TABLE IF EXISTS `bath` CASCADE
;

DROP TABLE IF EXISTS `bed` CASCADE
;

DROP TABLE IF EXISTS `capacity` CASCADE
;

DROP TABLE IF EXISTS `car_brand` CASCADE
;

DROP TABLE IF EXISTS `car_type` CASCADE
;

DROP TABLE IF EXISTS `chair` CASCADE
;

DROP TABLE IF EXISTS `color` CASCADE
;

DROP TABLE IF EXISTS `comments` CASCADE
;

DROP TABLE IF EXISTS `cupboard` CASCADE
;

DROP TABLE IF EXISTS `delivery` CASCADE
;

DROP TABLE IF EXISTS `delivery_truck` CASCADE
;

DROP TABLE IF EXISTS `discount` CASCADE
;

DROP TABLE IF EXISTS `door` CASCADE
;

DROP TABLE IF EXISTS `dresser` CASCADE
;

DROP TABLE IF EXISTS `factory` CASCADE
;

DROP TABLE IF EXISTS `floor_lamp` CASCADE
;

DROP TABLE IF EXISTS `image_url` CASCADE
;

DROP TABLE IF EXISTS `m2m_mesage_user` CASCADE
;

DROP TABLE IF EXISTS `m2m_news_image_url` CASCADE
;

DROP TABLE IF EXISTS `m2m_order_product` CASCADE
;

DROP TABLE IF EXISTS `m2m_product_discount` CASCADE
;

DROP TABLE IF EXISTS `m2m_product_image_url` CASCADE
;

DROP TABLE IF EXISTS `m2m_user_type_permission` CASCADE
;

DROP TABLE IF EXISTS `m2m_warehouse_product` CASCADE
;

DROP TABLE IF EXISTS `manufacturer` CASCADE
;

DROP TABLE IF EXISTS `matress` CASCADE
;

DROP TABLE IF EXISTS `message` CASCADE
;

DROP TABLE IF EXISTS `mirror` CASCADE
;

DROP TABLE IF EXISTS `news` CASCADE
;

DROP TABLE IF EXISTS `order` CASCADE
;

DROP TABLE IF EXISTS `order_status` CASCADE
;

DROP TABLE IF EXISTS `permission` CASCADE
;

DROP TABLE IF EXISTS `product` CASCADE
;

DROP TABLE IF EXISTS `product_type` CASCADE
;

DROP TABLE IF EXISTS `product_value` CASCADE
;

DROP TABLE IF EXISTS `reception_point` CASCADE
;

DROP TABLE IF EXISTS `shelf` CASCADE
;

DROP TABLE IF EXISTS `sink` CASCADE
;

DROP TABLE IF EXISTS `sofa` CASCADE
;

DROP TABLE IF EXISTS `tables` CASCADE
;

DROP TABLE IF EXISTS `user` CASCADE
;

DROP TABLE IF EXISTS `user_info` CASCADE
;

DROP TABLE IF EXISTS `user_online` CASCADE
;

DROP TABLE IF EXISTS `user_type` CASCADE
;

DROP TABLE IF EXISTS `warehouse` CASCADE
;

DROP TABLE IF EXISTS `wishlist` CASCADE
;

/* Drop Stored Procedures */

DROP PROCEDURE IF EXISTS `CLEAR_INFORMATION_ONLINE`
;

DROP PROCEDURE IF EXISTS `UPDATE_USER_INFO`
;

/* Drop Functions */

DROP FUNCTION IF EXISTS `CREATE_ORDER`
;

DROP FUNCTION IF EXISTS `CREATE_USER`
;

DROP FUNCTION IF EXISTS `GET_ID_BY_PRODUCT_VALUE`
;

DROP FUNCTION IF EXISTS `GET_PRODUCT_VALUE_BY_ID`
;

DROP FUNCTION IF EXISTS `GET_USER_TOTAL_TIME_ON_SITE`
;

/* Create Functions */

DELIMITER //
CREATE FUNCTION CREATE_ORDER(
    `user` INTEGER UNSIGNED,
    `delivery_user` INTEGER UNSIGNED, 
    `status` INTEGER UNSIGNED,
	`price` INTEGER UNSIGNED, 
    `address` INTEGER UNSIGNED, 
    `time_from` DATETIME, 
    `time_to` DATETIME, 
    `additional_info` TEXT
)
RETURNS INTEGER UNSIGNED DETERMINISTIC
BEGIN
	INSERT INTO `order` 
    VALUES(NULL, `user`, `status`, `price`, CURDATE());

	INSERT INTO `delivery` 
    VALUES(NULL, `user`, LAST_INSERT_ID(), `address`, `time_from`, `time_to`, NULL, `additional_info`);

    RETURN LAST_INSERT_ID();
END;
//
DELIMITER ;
;

DELIMITER //
CREATE FUNCTION CREATE_USER(
	`user_type` INTEGER UNSIGNED, 
    `email` VARCHAR(100), 
    `password` VARCHAR(100), 
    `nickname` VARCHAR(100), 
    `first_name` VARCHAR(100), 
    `middle_name` VARCHAR(100), 
    `last_name` VARCHAR(100), 
    `phone` VARCHAR(20)
)
RETURNS INTEGER UNSIGNED DETERMINISTIC
BEGIN
	INSERT INTO `user_info` 
    VALUES(
        NULL, 
        NULL, 
        `user_type`, 
        `email`, 
        `password`, 
        `nickname`,
        `first_name`,
        `middle_name`,
        `last_name`,
        `phone`, 
        CURDATE()
    );
	
    SET @user_info_id = LAST_INSERT_ID();
    INSERT INTO `user` VALUES(NULL, user_info_id, CURDATE());
    UPDATE `user_info` SET `use_id` = LAST_INSERT_ID() WHERE `uin_id` = @user_info_id;
    
    RETURN LAST_INSERT_ID();
END;
//
DELIMITER ;
;

DELIMITER //
CREATE FUNCTION GET_ID_BY_PRODUCT_VALUE(`val` VARCHAR(140), `prod_type` INTEGER UNSIGNED)
RETURNS INTEGER UNSIGNED DETERMINISTIC
	RETURN ( 
		SELECT `pva_id` 
		FROM `product_value` `pv` 
		WHERE `val` = `pv`.`pva_value` AND `prod_type` = `pv`.`pty_id`
    );

//
DELIMITER ;
;

DELIMITER //
CREATE FUNCTION GET_PRODUCT_VALUE_BY_ID(`product_val_id` INTEGER UNSIGNED)
RETURNS VARCHAR(140) DETERMINISTIC
	RETURN ( 
		SELECT `pva_value` 
		FROM `product_value` 
		WHERE `product_val_id` = `pva_id`
    );
//
DELIMITER ;
;

DELIMITER //
CREATE FUNCTION GET_USER_TOTAL_TIME_ON_SITE(`user_id` INTEGER UNSIGNED)
RETURNS INTEGER UNSIGNED DETERMINISTIC
	RETURN ( 
		SELECT 
			IFNULL(
				SUM(
					TIME_TO_SEC(`uon_time_out`) - 
					TIME_TO_SEC(`uon_time_in`)
				), 0
			)
		FROM `user_online` 
		WHERE `use_id` = `user_id`
    );

//
DELIMITER ;
;

/* Create Tables */

CREATE TABLE `address`
(
	`add_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`add_country` VARCHAR(50) NOT NULL,
	`add_city` VARCHAR(100) NOT NULL,
	`add_region` VARCHAR(150) 	 NULL,
	`add_street` VARCHAR(150) NOT NULL,
	`add_building` VARCHAR(50) 	 NULL,
	`add_home` VARCHAR(50) NOT NULL,
	`add_apartment` VARCHAR(50) NOT NULL,
	`add_postcode` VARCHAR(50) 	 NULL,
	CONSTRAINT `PK_address` PRIMARY KEY (`add_id` ASC)
)

;

CREATE TABLE `armchair`
(
	`armchair_id` INTEGER UNSIGNED NOT NULL,
	`armchair_weight` INTEGER UNSIGNED NOT NULL,
	`armchair_height` INTEGER UNSIGNED NOT NULL,
	`armchair_depth` INTEGER UNSIGNED NOT NULL,
	`armchair_covering` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_wiper_blades` PRIMARY KEY (`armchair_id` ASC)
)

;

CREATE TABLE `bath`
(
	`bath_id` INTEGER UNSIGNED NOT NULL,
	`bath_volume` INTEGER UNSIGNED NOT NULL,
	`bath_color` VARCHAR(50) NOT NULL,
	`bath_height` INTEGER UNSIGNED NOT NULL,
	`bath_width` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_accumulator` PRIMARY KEY (`bath_id` ASC)
)

;

CREATE TABLE `bed`
(
	`bed_id` INTEGER UNSIGNED NOT NULL,
	`bed_num_of_places` INTEGER UNSIGNED NOT NULL,
	`bed_length` INTEGER UNSIGNED NOT NULL,
	`bed_width` INTEGER UNSIGNED NOT NULL,
	`bed_material` VARCHAR(50) 	 NULL,
	CONSTRAINT `PK_filters` PRIMARY KEY (`bed_id` ASC)
)

;

CREATE TABLE `capacity`
(
	`cap_id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	`cap_width` INTEGER UNSIGNED NOT NULL,
	`cap_height` INTEGER UNSIGNED NOT NULL,
	`cap_length` INTEGER UNSIGNED NOT NULL,
	`cap_weight` INTEGER 	 UNSIGNED NULL,
	CONSTRAINT `PK_capacity` PRIMARY KEY (`cap_id` ASC)
)

;

CREATE TABLE `car_brand`
(
	`cba_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`cba_name` VARCHAR(150) NOT NULL,
	CONSTRAINT `PK_car_brand` PRIMARY KEY (`cba_id` ASC)
)

;

CREATE TABLE `car_type`
(
	`cty_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`cap_id` BIGINT UNSIGNED NOT NULL,
	`fac_id` INTEGER UNSIGNED NOT NULL,
	`col_id` INTEGER UNSIGNED NOT NULL,
	`cba_id` INTEGER UNSIGNED NOT NULL,
	`cty_release_year` INTEGER UNSIGNED NOT NULL,
	`cty_fuel_consumption` INTEGER UNSIGNED NOT NULL,
	`cty_name` VARCHAR(100) NOT NULL,
	`cty_vin_num` CHAR(17) NOT NULL,
	CONSTRAINT `PK_car_type` PRIMARY KEY (`cty_id` ASC)
)

;

CREATE TABLE `chair`
(
	`chair_id` INTEGER UNSIGNED NOT NULL,
	`chair_height` INTEGER UNSIGNED NOT NULL,
	`chair_upholstery` VARCHAR(50) NOT NULL,
	`chair_material` VARCHAR(50) 	 NULL,
	CONSTRAINT `PK_oil_seal` PRIMARY KEY (`chair_id` ASC)
)

;

CREATE TABLE `color`
(
	`col_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`col_name` VARCHAR(60) NOT NULL,
	CONSTRAINT `PK_color` PRIMARY KEY (`col_id` ASC)
)

;

CREATE TABLE `comments`
(
	`com_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`pro_id` INTEGER UNSIGNED NOT NULL,
	`use_id` INTEGER UNSIGNED NOT NULL,
	`com_content` TEXT NOT NULL,
	CONSTRAINT `PK_comments` PRIMARY KEY (`com_id` ASC)
)

;

CREATE TABLE `cupboard`
(
	`cupboard_id` INTEGER UNSIGNED NOT NULL,
	`cupboard_type` VARCHAR(50) NOT NULL,
	`cupboard_height` INTEGER UNSIGNED NOT NULL,
	`cupboard_depth` INTEGER UNSIGNED NOT NULL,
	`cupboard_num_of_sections` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_starter` PRIMARY KEY (`cupboard_id` ASC)
)

;

CREATE TABLE `delivery`
(
	`del_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`use_id` INTEGER 	 UNSIGNED NULL,
	`ord_id` INTEGER UNSIGNED NOT NULL,
	`add_id` INTEGER UNSIGNED NOT NULL,
	`del_time_from` DATETIME NOT NULL,
	`del_time_to` DATETIME NOT NULL,
	`del_time_done` DATETIME 	 NULL,
	`del_additional_info` TEXT 	 NULL,
	CONSTRAINT `PK_delivery` PRIMARY KEY (`del_id` ASC)
)

;

CREATE TABLE `delivery_truck`
(
	`car_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`cty_id` INTEGER UNSIGNED NOT NULL,
	`car_number` VARCHAR(30) NOT NULL,
	`use_id` INTEGER 	 UNSIGNED NULL,
	`war_id` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_car` PRIMARY KEY (`car_id` ASC)
)

;

CREATE TABLE `discount`
(
	`dis_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`dis_percent` INTEGER UNSIGNED NOT NULL,
	`dis_code` VARCHAR(16) NOT NULL,
	`dis_start_date` DATETIME 	 NULL,
	`dis_end_date` DATETIME 	 NULL,
	CONSTRAINT `PK_discount` PRIMARY KEY (`dis_id` ASC)
)

;

CREATE TABLE `door`
(
	`door_id` INTEGER UNSIGNED NOT NULL,
	`door_color` VARCHAR(50) NOT NULL,
	`door_height` INTEGER UNSIGNED NOT NULL,
	`door_width` INTEGER UNSIGNED NOT NULL,
	`door_lock` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_pump` PRIMARY KEY (`door_id` ASC)
)

;

CREATE TABLE `dresser`
(
	`dresser_id` INTEGER UNSIGNED NOT NULL,
	`dresser_number_of_shelfs` INTEGER UNSIGNED NOT NULL,
	`dresser_height` INTEGER UNSIGNED NOT NULL,
	`dresser_depth` INTEGER UNSIGNED NOT NULL,
	`dresser_width` INTEGER UNSIGNED NOT NULL,
	`dresser_color` VARCHAR(50) NOT NULL,
	`dresser_material` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_brake_columns` PRIMARY KEY (`dresser_id` ASC)
)

;

CREATE TABLE `factory`
(
	`fac_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`add_id` INTEGER UNSIGNED NOT NULL,
	`man_id` INTEGER UNSIGNED NOT NULL,
	`fac_name` VARCHAR(200) NOT NULL,
	CONSTRAINT `PK_manufacturer` PRIMARY KEY (`fac_id` ASC)
)

;

CREATE TABLE `floor_lamp`
(
	`lmp_id` INTEGER UNSIGNED NOT NULL,
	`lmp_height` INTEGER UNSIGNED NOT NULL,
	`lmp_num_of_lamps` INTEGER UNSIGNED NOT NULL,
	`lmp_color` VARCHAR(50) NOT NULL,
	`lmp_material` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_wheel_disc` PRIMARY KEY (`lmp_id` ASC)
)

;

CREATE TABLE `image_url`
(
	`iur_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`iur_url` VARCHAR(2048) NOT NULL,
	`iur_name` VARCHAR(250) 	 NULL,
	CONSTRAINT `PK_image_url` PRIMARY KEY (`iur_id` ASC)
)

;

CREATE TABLE `m2m_mesage_user`
(
	`mes_id` INTEGER UNSIGNED NOT NULL,
	`use_id` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_message_recipient` PRIMARY KEY (`use_id` ASC, `mes_id` ASC)
)

;

CREATE TABLE `m2m_news_image_url`
(
	`new_id` INTEGER UNSIGNED NOT NULL,
	`iur_id` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_news_image` PRIMARY KEY (`new_id` ASC, `iur_id` ASC)
)

;

CREATE TABLE `m2m_order_product`
(
	`ord_id` INTEGER UNSIGNED NOT NULL,
	`pro_id` INTEGER UNSIGNED NOT NULL,
	`count` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_m2m_order_product` PRIMARY KEY (`ord_id` ASC, `pro_id` ASC)
)

;

CREATE TABLE `m2m_product_discount`
(
	`pro_id` INTEGER UNSIGNED NOT NULL,
	`dis_id` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_m2m_product_discount` PRIMARY KEY (`pro_id` ASC, `dis_id` ASC)
)

;

CREATE TABLE `m2m_product_image_url`
(
	`pro_id` INTEGER UNSIGNED NOT NULL,
	`iur_id` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_m2m_product_image_url` PRIMARY KEY (`pro_id` ASC, `iur_id` ASC)
)

;

CREATE TABLE `m2m_user_type_permission`
(
	`uty_id` INTEGER UNSIGNED NOT NULL,
	`per_id` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_m2m_user_type_permission` PRIMARY KEY (`per_id` ASC, `uty_id` ASC)
)

;

CREATE TABLE `m2m_warehouse_product`
(
	`war_id` INTEGER UNSIGNED NOT NULL,
	`pro_id` INTEGER UNSIGNED NOT NULL,
	`count` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_m2m_warehouse_product` PRIMARY KEY (`war_id` ASC, `pro_id` ASC)
)

;

CREATE TABLE `manufacturer`
(
	`man_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`man_name` VARCHAR(200) NOT NULL,
	CONSTRAINT `PK_manufacturer` PRIMARY KEY (`man_id` ASC)
)

;

CREATE TABLE `matress`
(
	`matress_id` INTEGER UNSIGNED NOT NULL,
	`matress_type` VARCHAR(50) NOT NULL,
	`matress_rigidity` VARCHAR(50) NOT NULL,
	`matress_color` VARCHAR(50) 	 NULL,
	CONSTRAINT `PK_oil` PRIMARY KEY (`matress_id` ASC)
)

;

CREATE TABLE `message`
(
	`mes_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`use_id` INTEGER UNSIGNED NOT NULL,
	`mes_content` TEXT 	 NULL,
	`mes_time` DATETIME NOT NULL,
	CONSTRAINT `PK_messages` PRIMARY KEY (`mes_id` ASC)
)

;

CREATE TABLE `mirror`
(
	`mirror_id` INTEGER UNSIGNED NOT NULL,
	`mirror_width` INTEGER UNSIGNED NOT NULL,
	`mirror_height` INTEGER UNSIGNED NOT NULL,
	`mirrior_frame` VARCHAR(50) 	 NULL,
	CONSTRAINT `PK_steering_rack` PRIMARY KEY (`mirror_id` ASC)
)

;

CREATE TABLE `news`
(
	`new_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`use_id` INTEGER UNSIGNED NOT NULL,
	`new_header` VARCHAR(500) NOT NULL,
	`new_content` TEXT NOT NULL,
	`new_time` DATETIME NOT NULL,
	CONSTRAINT `PK_news` PRIMARY KEY (`new_id` ASC)
)

;

CREATE TABLE `order`
(
	`ord_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`use_id` INTEGER UNSIGNED NOT NULL,
	`ost_id` INTEGER UNSIGNED NOT NULL,
	`ord_price` INTEGER UNSIGNED NOT NULL,
	`ord_created_time` DATETIME NOT NULL,
	`rpo_id` INTEGER 	 UNSIGNED NULL,
	CONSTRAINT `PK_order` PRIMARY KEY (`ord_id` ASC)
)

;

CREATE TABLE `order_status`
(
	`ost_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`ost_name` VARCHAR(250) NOT NULL,
	CONSTRAINT `PK_order_status` PRIMARY KEY (`ost_id` ASC)
)

;

CREATE TABLE `permission`
(
	`per_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`per_name` VARCHAR(150) NOT NULL,
	CONSTRAINT `PK_permission` PRIMARY KEY (`per_id` ASC)
)

;

CREATE TABLE `product`
(
	`pro_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`pty_id` INTEGER UNSIGNED NOT NULL,
	`cap_id` BIGINT UNSIGNED NOT NULL,
	`fac_id` INTEGER 	 UNSIGNED NULL,
	`col_id` INTEGER 	 UNSIGNED NULL,
	`cty_id` INTEGER 	 UNSIGNED NULL,
	`pro_name` VARCHAR(100) NOT NULL,
	`pro_description` TEXT 	 NULL,
	`pro_price` INTEGER NOT NULL,
	`pro_release_year` INTEGER 	 UNSIGNED NULL,
	CONSTRAINT `PK_product` PRIMARY KEY (`pro_id` ASC)
)

;

CREATE TABLE `product_type`
(
	`pty_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`pty_name` VARCHAR(140) NOT NULL,
	CONSTRAINT `PK_product_type` PRIMARY KEY (`pty_id` ASC)
)

;

CREATE TABLE `product_value`
(
	`pva_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`pva_value` VARCHAR(140) NOT NULL,
	`pty_id` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_product_value` PRIMARY KEY (`pva_id` ASC)
)

;

CREATE TABLE `reception_point`
(
	`rpo_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`add_id` INTEGER UNSIGNED NOT NULL,
	`use_id` INTEGER 	 UNSIGNED NULL,
	`cap_id` BIGINT UNSIGNED NOT NULL,
	`rec_name` VARCHAR(150) NOT NULL,
	CONSTRAINT `PK_reception_point` PRIMARY KEY (`rpo_id` ASC)
)

;

CREATE TABLE `shelf`
(
	`shelf_id` INTEGER UNSIGNED NOT NULL,
	`shelf_width` INTEGER UNSIGNED NOT NULL,
	`shelf_depth` INTEGER UNSIGNED NOT NULL,
	`shelf_color` VARCHAR(50) NOT NULL,
	`shelf_material` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_timing_belt` PRIMARY KEY (`shelf_id` ASC)
)

;

CREATE TABLE `sink`
(
	`sink_id` INTEGER UNSIGNED NOT NULL,
	`sink_volume` INT 	 NULL,
	`sink_color` VARCHAR(50) 	 NULL,
	`sink_depth` INTEGER 	 UNSIGNED NULL,
	`sink_width` INTEGER UNSIGNED NOT NULL,
	`sink_height` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_brake_disc` PRIMARY KEY (`sink_id` ASC)
)

;

CREATE TABLE `sofa`
(
	`sofa_id` INTEGER UNSIGNED NOT NULL,
	`sofa_number_of_seats` INTEGER UNSIGNED NOT NULL,
	`sofa_length` INT NOT NULL,
	`sofa_height` INT NOT NULL,
	`sofa_depth` INTEGER UNSIGNED NOT NULL,
	`sofa_covering` VARCHAR(50) NOT NULL,
	`sro_tip` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_steering_rods` PRIMARY KEY (`sofa_id` ASC)
)

;

CREATE TABLE `tables`
(
	`table_id` INTEGER UNSIGNED NOT NULL,
	`table_height` INTEGER UNSIGNED NOT NULL,
	`table_num_of_seats` INTEGER UNSIGNED NOT NULL,
	`table_material` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_candle` PRIMARY KEY (`table_id` ASC)
)

;

CREATE TABLE `user`
(
	`use_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`uin_id` BIGINT UNSIGNED NOT NULL,
	`use_registration_time` DATETIME NOT NULL,
	CONSTRAINT `PK_user` PRIMARY KEY (`use_id` ASC)
)

;

CREATE TABLE `user_info`
(
	`uin_id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	`use_id` INTEGER 	 UNSIGNED NULL,
	`uty_id` INTEGER UNSIGNED NOT NULL,
	`uin_email` VARCHAR(100) NOT NULL,
	`uin_password` VARCHAR(100) NOT NULL,
	`uin_nickname` VARCHAR(100) 	 NULL,
	`uin_first_name` VARCHAR(100) 	 NULL,
	`uin_middle_name` VARCHAR(100) 	 NULL,
	`uin_last_name` VARCHAR(100) 	 NULL,
	`uin_phone` VARCHAR(20) 	 NULL,
	`uin_time_update` DATETIME NOT NULL,
	CONSTRAINT `PK_user_info` PRIMARY KEY (`uin_id` ASC)
)

;

CREATE TABLE `user_online`
(
	`uon_id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	`use_id` INTEGER UNSIGNED NOT NULL,
	`uon_time_in` DATETIME NOT NULL,
	`uon_time_out` DATETIME NOT NULL,
	CONSTRAINT `PK_user_online` PRIMARY KEY (`uon_id` ASC)
)

;

CREATE TABLE `user_type`
(
	`uty_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`uty_name` VARCHAR(150) NOT NULL,
	CONSTRAINT `PK_user_type` PRIMARY KEY (`uty_id` ASC)
)

;

CREATE TABLE `warehouse`
(
	`war_id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	`add_id` INTEGER UNSIGNED NOT NULL,
	`cap_id` BIGINT UNSIGNED NOT NULL,
	`use_id` INTEGER 	 UNSIGNED NULL,
	`war_name` VARCHAR(150) NOT NULL,
	CONSTRAINT `PK_warehouse` PRIMARY KEY (`war_id` ASC)
)

;

CREATE TABLE `wishlist`
(
	`pro_id` INTEGER UNSIGNED NOT NULL,
	`use_id` INTEGER UNSIGNED NOT NULL,
	`count` INTEGER UNSIGNED NOT NULL,
	CONSTRAINT `PK_wishlist` PRIMARY KEY (`pro_id` ASC, `use_id` ASC)
)

;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE `armchair` 
 ADD INDEX `IXFK_wiper_blades_product` (`armchair_id` ASC)
;

ALTER TABLE `bath` 
 ADD INDEX `IXFK_accumulator_product` (`bath_id` ASC)
;

ALTER TABLE `bed` 
 ADD INDEX `IXFK_filters_product` (`bed_id` ASC)
;

ALTER TABLE `car_brand` 
 ADD CONSTRAINT `UNX_cba_name` UNIQUE (`cba_name` ASC)
;

ALTER TABLE `car_brand` 
 ADD INDEX `IX_cba_name` (`cba_name` ASC)
;

ALTER TABLE `car_type` 
 ADD INDEX `IX_cty_name` (`cty_name` ASC)
;

ALTER TABLE `chair` 
 ADD INDEX `IXFK_oil_seal_product` (`chair_id` ASC)
;

ALTER TABLE `color` 
 ADD CONSTRAINT `UNX_col_name` UNIQUE (`col_name` ASC)
;

ALTER TABLE `color` 
 ADD INDEX `IX_col_name` (`col_name` ASC)
;

ALTER TABLE `cupboard` 
 ADD INDEX `IXFK_starter_product` (`cupboard_id` ASC)
;

ALTER TABLE `door` 
 ADD INDEX `IXFK_pump_product` (`door_id` ASC)
;

ALTER TABLE `dresser` 
 ADD INDEX `IXFK_brake_columns_product` (`dresser_id` ASC)
;

ALTER TABLE `floor_lamp` 
 ADD INDEX `IXFK_wheel_disc_product` (`lmp_id` ASC)
;

ALTER TABLE `matress` 
 ADD INDEX `IXFK_oil_product` (`matress_id` ASC)
;

ALTER TABLE `mirror` 
 ADD INDEX `IXFK_steering_rack_product` (`mirror_id` ASC)
;

ALTER TABLE `news` 
 ADD INDEX `IX_new_header` (`new_header` ASC)
;

DELIMITER //
CREATE TRIGGER `TRG_udpate_order_time_created_after_ins`
BEFORE INSERT
ON `order`
	FOR EACH ROW
	BEGIN
		SET NEW.`ord_created_time` = CURDATE();
	END; 
//
DELIMITER ;
;

ALTER TABLE `order_status` 
 ADD CONSTRAINT `UNX_ost_name` UNIQUE (`ost_name` ASC)
;

ALTER TABLE `order_status` 
 ADD INDEX `IX_ost_name` (`ost_name` ASC)
;

ALTER TABLE `permission` 
 ADD CONSTRAINT `UNX_per_name` UNIQUE (`per_name` ASC)
;

ALTER TABLE `product_type` 
 ADD CONSTRAINT `UNX_pty_name` UNIQUE (`pty_name` ASC)
;

ALTER TABLE `product_type` 
 ADD INDEX `IX_pty_name` (`pty_name` ASC)
;

ALTER TABLE `product_value` 
 ADD CONSTRAINT `UNX_pva_value` UNIQUE (`pva_value` ASC)
;

ALTER TABLE `shelf` 
 ADD INDEX `IXFK_timing_belt_product` (`shelf_id` ASC)
;

ALTER TABLE `sink` 
 ADD INDEX `IXFK_brake_disc_product` (`sink_id` ASC)
;

ALTER TABLE `sofa` 
 ADD INDEX `IXFK_steering_rods_product` (`sofa_id` ASC)
;

ALTER TABLE `tables` 
 ADD INDEX `IXFK_candle_product` (`table_id` ASC)
;

DELIMITER //
CREATE TRIGGER `TRG_udpate_user_registration_time_before_ins`
BEFORE INSERT
ON `user`
	FOR EACH ROW
	BEGIN
		SET NEW.`use_registration_time` = CURDATE();
	END; 
//
DELIMITER ;
;

ALTER TABLE `user_info` 
 ADD CONSTRAINT `UNX_uin_email` UNIQUE (`uin_email` ASC)
;

ALTER TABLE `user_info` 
 ADD CONSTRAINT `UNX_uin_nickname` UNIQUE (`uin_nickname` ASC)
;

ALTER TABLE `user_info` 
 ADD CONSTRAINT `UNX_uin_phone` UNIQUE (`uin_phone` ASC)
;

DELIMITER //
CREATE TRIGGER `TRG_user_online_clear_before_insert`
    AFTER INSERT
    ON `user_online` FOR EACH ROW
BEGIN
    SET @count = (SELECT COUNT(*) FROM `user_online`);
	IF @count > 18446744073709551610 THEN
		CALL CLEAR_INFORMATION_ONLINE();
	END IF;
END; 
//
DELIMITER ;
;

ALTER TABLE `user_type` 
 ADD CONSTRAINT `UNX_uty_name` UNIQUE (`uty_name` ASC)
;

ALTER TABLE `warehouse` 
 ADD INDEX `IX_war_name` (`war_name` ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE `armchair` 
 ADD CONSTRAINT `FK_wiper_blades_product`
	FOREIGN KEY (`armchair_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `bath` 
 ADD CONSTRAINT `FK_accumulator_product`
	FOREIGN KEY (`bath_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `bed` 
 ADD CONSTRAINT `FK_filters_product`
	FOREIGN KEY (`bed_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `car_type` 
 ADD CONSTRAINT `FK_car_type_capacity`
	FOREIGN KEY (`cap_id`) REFERENCES `capacity` (`cap_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `car_type` 
 ADD CONSTRAINT `FK_car_type_car_brand`
	FOREIGN KEY (`cba_id`) REFERENCES `car_brand` (`cba_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `car_type` 
 ADD CONSTRAINT `FK_car_type_color`
	FOREIGN KEY (`col_id`) REFERENCES `color` (`col_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `car_type` 
 ADD CONSTRAINT `FK_car_type_factory`
	FOREIGN KEY (`fac_id`) REFERENCES `factory` (`fac_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `chair` 
 ADD CONSTRAINT `FK_oil_seal_product`
	FOREIGN KEY (`chair_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `comments` 
 ADD CONSTRAINT `FK_comments_product`
	FOREIGN KEY (`pro_id`) REFERENCES `product` (`pro_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `comments` 
 ADD CONSTRAINT `FK_comments_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE No Action ON UPDATE Cascade
;

ALTER TABLE `cupboard` 
 ADD CONSTRAINT `FK_starter_product`
	FOREIGN KEY (`cupboard_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `delivery` 
 ADD CONSTRAINT `FK_delivery_address`
	FOREIGN KEY (`add_id`) REFERENCES `address` (`add_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `delivery` 
 ADD CONSTRAINT `FK_delivery_order`
	FOREIGN KEY (`ord_id`) REFERENCES `order` (`ord_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `delivery` 
 ADD CONSTRAINT `FK_delivery_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `delivery_truck` 
 ADD CONSTRAINT `FK_car_car_type`
	FOREIGN KEY (`cty_id`) REFERENCES `car_type` (`cty_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `delivery_truck` 
 ADD CONSTRAINT `FK_car_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE Set Null ON UPDATE Cascade
;

ALTER TABLE `delivery_truck` 
 ADD CONSTRAINT `FK_car_warehouse`
	FOREIGN KEY (`war_id`) REFERENCES `warehouse` (`war_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `door` 
 ADD CONSTRAINT `FK_pump_product`
	FOREIGN KEY (`door_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `dresser` 
 ADD CONSTRAINT `FK_brake_columns_product`
	FOREIGN KEY (`dresser_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `factory` 
 ADD CONSTRAINT `FK_factory_manufacturer`
	FOREIGN KEY (`man_id`) REFERENCES `manufacturer` (`man_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `factory` 
 ADD CONSTRAINT `FK_manufacturer_address`
	FOREIGN KEY (`add_id`) REFERENCES `address` (`add_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `floor_lamp` 
 ADD CONSTRAINT `FK_wheel_disc_product`
	FOREIGN KEY (`lmp_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_mesage_user` 
 ADD CONSTRAINT `FK_message_recipient_message`
	FOREIGN KEY (`mes_id`) REFERENCES `message` (`mes_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_mesage_user` 
 ADD CONSTRAINT `FK_message_recipient_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_news_image_url` 
 ADD CONSTRAINT `FK_m2m_news_image_url_image_url`
	FOREIGN KEY (`iur_id`) REFERENCES `image_url` (`iur_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_news_image_url` 
 ADD CONSTRAINT `FK_m2m_news_image_url_news`
	FOREIGN KEY (`new_id`) REFERENCES `news` (`new_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_order_product` 
 ADD CONSTRAINT `FK_m2m_order_product_order`
	FOREIGN KEY (`ord_id`) REFERENCES `order` (`ord_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_order_product` 
 ADD CONSTRAINT `FK_m2m_order_product_product`
	FOREIGN KEY (`pro_id`) REFERENCES `product` (`pro_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `m2m_product_discount` 
 ADD CONSTRAINT `FK_m2m_product_discount_discount`
	FOREIGN KEY (`dis_id`) REFERENCES `discount` (`dis_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_product_discount` 
 ADD CONSTRAINT `FK_m2m_product_discount_product`
	FOREIGN KEY (`pro_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_product_image_url` 
 ADD CONSTRAINT `FK_m2m_product_image_url_image_url`
	FOREIGN KEY (`iur_id`) REFERENCES `image_url` (`iur_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_product_image_url` 
 ADD CONSTRAINT `FK_m2m_product_image_url_product`
	FOREIGN KEY (`pro_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_user_type_permission` 
 ADD CONSTRAINT `FK_m2m_user_type_permission_permission`
	FOREIGN KEY (`per_id`) REFERENCES `permission` (`per_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_user_type_permission` 
 ADD CONSTRAINT `FK_m2m_user_type_permission_user_type`
	FOREIGN KEY (`uty_id`) REFERENCES `user_type` (`uty_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `m2m_warehouse_product` 
 ADD CONSTRAINT `FK_m2m_warehouse_product_product`
	FOREIGN KEY (`pro_id`) REFERENCES `product` (`pro_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `m2m_warehouse_product` 
 ADD CONSTRAINT `FK_m2m_warehouse_product_warehouse`
	FOREIGN KEY (`war_id`) REFERENCES `warehouse` (`war_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `matress` 
 ADD CONSTRAINT `FK_oil_product`
	FOREIGN KEY (`matress_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `message` 
 ADD CONSTRAINT `FK_message_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `mirror` 
 ADD CONSTRAINT `FK_steering_rack_product`
	FOREIGN KEY (`mirror_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `news` 
 ADD CONSTRAINT `FK_news_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE No Action ON UPDATE Cascade
;

ALTER TABLE `order` 
 ADD CONSTRAINT `FK_order_order_status`
	FOREIGN KEY (`ost_id`) REFERENCES `order_status` (`ost_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `order` 
 ADD CONSTRAINT `FK_order_reception_point`
	FOREIGN KEY (`rpo_id`) REFERENCES `reception_point` (`rpo_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `order` 
 ADD CONSTRAINT `FK_order_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `product` 
 ADD CONSTRAINT `FK_product_capacity`
	FOREIGN KEY (`cap_id`) REFERENCES `capacity` (`cap_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `product` 
 ADD CONSTRAINT `FK_product_car_type`
	FOREIGN KEY (`cty_id`) REFERENCES `car_type` (`cty_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `product` 
 ADD CONSTRAINT `FK_product_color`
	FOREIGN KEY (`col_id`) REFERENCES `color` (`col_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `product` 
 ADD CONSTRAINT `FK_product_factory`
	FOREIGN KEY (`fac_id`) REFERENCES `factory` (`fac_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `product` 
 ADD CONSTRAINT `FK_product_product_type`
	FOREIGN KEY (`pty_id`) REFERENCES `product_type` (`pty_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `product_value` 
 ADD CONSTRAINT `FK_product_value_product_type`
	FOREIGN KEY (`pty_id`) REFERENCES `product_type` (`pty_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `reception_point` 
 ADD CONSTRAINT `FK_reception_point_address`
	FOREIGN KEY (`add_id`) REFERENCES `address` (`add_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `reception_point` 
 ADD CONSTRAINT `FK_reception_point_capacity`
	FOREIGN KEY (`cap_id`) REFERENCES `capacity` (`cap_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `reception_point` 
 ADD CONSTRAINT `FK_reception_point_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `shelf` 
 ADD CONSTRAINT `FK_timing_belt_product`
	FOREIGN KEY (`shelf_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `sink` 
 ADD CONSTRAINT `FK_brake_disc_product`
	FOREIGN KEY (`sink_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `sofa` 
 ADD CONSTRAINT `FK_steering_rods_product`
	FOREIGN KEY (`sofa_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `tables` 
 ADD CONSTRAINT `FK_candle_product`
	FOREIGN KEY (`table_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `user` 
 ADD CONSTRAINT `FK_user_user_info`
	FOREIGN KEY (`uin_id`) REFERENCES `user_info` (`uin_id`) ON DELETE Restrict ON UPDATE Cascade
;

ALTER TABLE `user_info` 
 ADD CONSTRAINT `FK_user_info_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `user_info` 
 ADD CONSTRAINT `FK_user_info_user_type`
	FOREIGN KEY (`uty_id`) REFERENCES `user_type` (`uty_id`) ON DELETE Restrict ON UPDATE No Action
;

ALTER TABLE `user_online` 
 ADD CONSTRAINT `FK_user_online_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `warehouse` 
 ADD CONSTRAINT `FK_warehouse_address`
	FOREIGN KEY (`add_id`) REFERENCES `address` (`add_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `warehouse` 
 ADD CONSTRAINT `FK_warehouse_capacity`
	FOREIGN KEY (`cap_id`) REFERENCES `capacity` (`cap_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `warehouse` 
 ADD CONSTRAINT `FK_warehouse_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `wishlist` 
 ADD CONSTRAINT `FK_wishlist_product`
	FOREIGN KEY (`pro_id`) REFERENCES `product` (`pro_id`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `wishlist` 
 ADD CONSTRAINT `FK_wishlist_user`
	FOREIGN KEY (`use_id`) REFERENCES `user` (`use_id`) ON DELETE Cascade ON UPDATE Cascade
;

SET FOREIGN_KEY_CHECKS=1 
;

/* Create Views */

CREATE OR REPLACE VIEW GET_ARMCHAIRS AS 
    SELECT `product`.*, `col_name`, `wbl_size`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
		   GET_PRODUCT_VALUE_BY_ID(`wbl_type`) AS `wbl_type`,
           `wbl_mounting_type`,
		   GET_PRODUCT_VALUE_BY_ID(`wbl_material`) AS `wbl_material`,
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `armchair` ON `armchair_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_BATHS AS 
    SELECT `product`.*, `col_name`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
		   GET_PRODUCT_VALUE_BY_ID(`acc_type`) AS `acc_type`, 
           `acc_capacity`, `acc_voltage`, `acc_efficiency`,
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `bath` ON `bath_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_BEDS AS 
    SELECT `product`.*, `col_name`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
		   GET_PRODUCT_VALUE_BY_ID(`fil_type`) AS `fil_type`, 
           `fil_efficiency`, 
		   GET_PRODUCT_VALUE_BY_ID(`fil_material`) AS `fil_material`, 
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `bed` ON `bed_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_CHAIRS AS 
    SELECT `product`.*, `col_name`, `chair`.*,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `chair` ON `chair_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_CUPBOARDS AS 
    SELECT `product`.*, `col_name`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
		   GET_PRODUCT_VALUE_BY_ID(`sta_type`) AS `sta_type`, 
           `sta_voltage`, `sta_power`, `sta_turnovers`, 
           `sta_current_strength`, `sta_tension_force`,
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `cupboard` ON `cupboard_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_DOORS AS 
    SELECT `product`.*, `col_name`, `door`.*,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `door` ON `door_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_DRESSERS AS 
    SELECT `product`.*, `col_name`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
			GET_PRODUCT_VALUE_BY_ID(`bco_frame_material`) AS `bco_frame_material`, 
			GET_PRODUCT_VALUE_BY_ID(`bco_internal_material`) AS `bco_internal_material`, 
            `bco_column_width`, `bco_column_length`, `bco_friction_coefficient`, `bco_max_load`,
            `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, 
           `add_postcode`, `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `shelf` ON `shelf_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_FLOOR_LAMPS AS 
    SELECT `product`.*, `floor_lamp`.*, `col_name`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,	
		   `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, 
           `add_postcode`, `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `floor_lamp` ON `lmp_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_MATRESSES AS 
    SELECT `product`.*, `col_name`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
		   GET_PRODUCT_VALUE_BY_ID(`oil_type`) AS `oil_type`, 
           `oil_capacity`,
		   GET_PRODUCT_VALUE_BY_ID(`oil_specification`) AS `oil_specification`, 
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `matress` ON `matress_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_MIRRORS AS 
    SELECT `product`.*, `col_name`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
		   GET_PRODUCT_VALUE_BY_ID(`sra_mechanism_type`) AS `sra_mechanism_type`, 
		   GET_PRODUCT_VALUE_BY_ID(`sra_operation_type`) AS `sra_operation_type`, 
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `mirror` ON `mirror_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_ORDERS AS 
	SELECT `ord_price`, `ord_created_time`, `product`.*,
		   `count`, `address`.*, `del_time_from`, `del_time_to`,
           `del_time_done`, `del_additional_info`
    FROM `order`
	JOIN `m2m_order_product` USING(`ord_id`)
	JOIN `product` USING(`pro_id`)
	JOIN `delivery` USING(`ord_id`)
	JOIN `address` USING(`add_id`);

;

CREATE OR REPLACE VIEW GET_SHELFS AS 
    SELECT `product`.*, `col_name`,
			`cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
			GET_PRODUCT_VALUE_BY_ID(`tbe_transport_type`) AS `tbe_transport_type`, 
            `tbe_teeth_number`,
			GET_PRODUCT_VALUE_BY_ID(`tbe_profile_code`) AS `tbe_profile_code`,
			GET_PRODUCT_VALUE_BY_ID(`tbe_teeth_type`) AS `tbe_teeth_type`,  
            `tbe_material`, `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, 
           `add_postcode`, `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `shelf` ON `shelf_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_SINKS AS 
    SELECT `product`.*, `col_name`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
		   `bdi_is_ventilated`, 
		   GET_PRODUCT_VALUE_BY_ID(`bdi_perforation_type`) AS `bdi_perforation_type`, 
		   GET_PRODUCT_VALUE_BY_ID(`bdi_material`) AS `bdi_material`, 
		   GET_PRODUCT_VALUE_BY_ID(`bdi_installation_side`) AS `bdi_installation_side`, 
		   GET_PRODUCT_VALUE_BY_ID(`bdi_type`) AS `bdi_type`, 
           `bdi_inner_diameter`, `bdi_outer_diameter`, `bdi_disk_width`,
           `bdi_holes_number`, `bdi_hole_width`, `fac_name`, `man_name`, 
           `add_country`, `add_city`, `add_region`, `add_street`, `add_building`, 
           `add_home`, `add_apartment`, `add_postcode`, `cap_width`, `cap_height`, 
           `cap_length`, `cap_weight`
    FROM `product`
    JOIN `sink` ON `sink_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_SOFAS AS 
    SELECT `product`.*, `col_name`, `sofa`.*,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `sofa` ON `sofa_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_TABLES AS 
    SELECT `product`.*, `col_name`, `can_spark_gap`,
		   `cty_release_year`, `cty_fuel_consumption`, `cty_name`, `cty_vin_num`,
		   `can_caloric_num`, `can_connecting_dimensions`, 
		   GET_PRODUCT_VALUE_BY_ID(`can_material`) AS `can_material`, 
           `can_num_of_side_electrodes`, `can_is_purify`,
           `fac_name`, `man_name`, `add_country`, `add_city`, `add_region`, 
           `add_street`, `add_building`, `add_home`, `add_apartment`, `add_postcode`, 
           `cap_width`, `cap_height`, `cap_length`, `cap_weight`
    FROM `product`
    JOIN `tables` ON `table_id` = `pro_id`
    JOIN `color` USING(`col_id`)
    JOIN `factory` USING(`fac_id`)
    JOIN `manufacturer` USING(`man_id`)
    JOIN `address` USING(`add_id`)
    JOIN `capacity` USING(`cap_id`)
    JOIN `car_type` USING(`cty_id`);

;

CREATE OR REPLACE VIEW GET_TOP_5_DELIVERY_USER_BY_NUM_OF_ORDERS AS 
	SELECT `use_id`, COUNT(`use_id`) AS `count`
	FROM `order`
	GROUP BY `use_id`
	ORDER BY COUNT(`count`) DESC LIMIT 5;
;

CREATE OR REPLACE VIEW GET_TOP_5_ORDERS_BY_PRICE AS 
	SELECT * FROM `order`
	ORDER BY `ord_price` DESC LIMIT 5;

;

CREATE OR REPLACE VIEW GET_TOP_5_PRODUCT_BY_ORDER AS 
	SELECT `pro_id`, SUM(`count`) AS `count`
	FROM `m2m_order_product`
	GROUP BY `pro_id`
	ORDER BY COUNT(`count`) DESC LIMIT 5;

;

CREATE OR REPLACE VIEW GET_USERS_INFO AS 
	SELECT `use_registration_time`, `user_info`.* 
    FROM `user`
	JOIN `user_info` USING(`use_id`);

;

/* Create Stored Procedures */

DELIMITER //
CREATE PROCEDURE CLEAR_INFORMATION_ONLINE()
BEGIN
	DELETE FROM `user_online`
	WHERE `uon_out` IS NOT NULL;
END;

//
DELIMITER ;
;

DELIMITER //
CREATE PROCEDURE UPDATE_USER_INFO(
    `user_id` INTEGER UNSIGNED,
	`user_type` INTEGER UNSIGNED, 
    `email` VARCHAR(100), 
    `password` VARCHAR(100), 
    `nickname` VARCHAR(100), 
    `first_name` VARCHAR(100), 
    `middle_name` VARCHAR(100), 
    `last_name` VARCHAR(100), 
    `phone` VARCHAR(20)
)
BEGIN
	INSERT INTO `user_info` 
    VALUES(
        NULL, 
        `user_id`, 
        `user_type`, 
        `email`, 
        `password`, 
        `nickname`,
        `first_name`,
        `middle_name`,
        `last_name`,
        `phone`, 
        CURDATE()
    );
    UPDATE `user_info` SET `use_id` = `user_id` WHERE `uin_id` = LAST_INSERT_ID();
END;


//
DELIMITER ;
;
